services:
    postgres:
        image: postgres:15-alpine
        container_name: postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        #      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
            - "5433:5432"
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: volga
        networks:
            - work

    rabbitmq:
        image: "rabbitmq:4"
        container_name: rabbitmq
        ports:
            - "5672:5672"
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 30s
            timeout: 10s
            retries: 5
        networks:
            - work

    auth_service:
        build:
            context: ./backend/account/
        container_name: auth_technostrelka
        ports:
            - "8081:8081"
        depends_on:
            - rabbitmq
            - postgres
            #    - redis
        env_file:
            - ./backend/account/.env
        networks:
            - work

    notification_service:
        build:
            context: ./backend/notification/
        container_name: notification_technostrelka
        ports:
            - "8083:8083"
        depends_on:
            - rabbitmq
            - postgres
            #    - redis
        env_file:
            - ./backend/notification/.env
        networks:
            - work

    route_service:
        build:
            context: ./backend/routes/
        container_name: routes_technostrelka
        ports:
            - "8082:8082"
        depends_on:
            - rabbitmq
            - postgres
            #    - redis
        env_file:
            - ./backend/routes/.env
        environment:
            - POSTGRES_HOST=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        networks:
            - work


#    python-example:
#        build:
#            context: ./backend/example/
#        container_name: example_service
#        ports:
#            - "8081:8081"
#        depends_on:
#            - rabbitmq
#            - postgres
#            - redis
#        env_file:
#            - ./backend/example/.env
#        networks:
#            - work

networks:
    work:

volumes:
    postgres_data:
    redis_data:
    elastic_data:
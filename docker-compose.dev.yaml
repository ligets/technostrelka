services:
    postgres:
        image: postgres:15-alpine
        container_name: postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data/
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
            - "5433:5432"
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
        networks:
            - dev

    pgadmin:
        image: dpage/pgadmin4
        container_name: pga
        ports:
            - "5050:80"
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: admin
        depends_on:
            - postgres
        networks:
            - dev

    rabbitmq:
        image: "rabbitmq:4-management"
        container_name: rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 30s
            timeout: 10s
            retries: 5
        networks:
            - dev

    auth_service:
        build:
            context: ./backend/account/
        container_name: auth_technostrelka
        ports:
            - "8081:8081"
        depends_on:
            - rabbitmq
            - postgres
            #    - redis
        environment:
            - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=15
            - JWT_REFRESH_TOKEN_EXPIRE_DAYS=30

            - POSTGRES_HOST=postgres
            - POSTGRES_PORT=5432
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=account_db

            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_USER=guest
            - RABBITMQ_PASSWORD=guest
        networks:
            - dev

    route_service:
        build:
            context: ./backend/routes/
        container_name: routes_technostrelka
        ports:
            - "8082:8082"
        depends_on:
            - rabbitmq
            - postgres
            #    - redis
        env_file:
            - ./backend/routes/.env
        environment:
            - POSTGRES_HOST=postgres
            - POSTGRES_PORT=5432
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=routes_db

            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_USER=guest
            - RABBITMQ_PASSWORD=guest
        networks:
            - work

#    notification_service:
#        build:
#            context: ./backend/notification/
#        container_name: notification_technostrelka
#        ports:
#            - "8083:8083"
#        depends_on:
#            - rabbitmq
#            - postgres
#            #    - redis
#        environment:
#            - POSTGRES_HOST=postgres
#            - POSTGRES_PORT=5432
#            - POSTGRES_USER=postgres
#            - POSTGRES_PASSWORD=postgres
#            - POSTGRES_DB=account_db
#
#            - RABBITMQ_HOST=rabbitmq
#            - RABBITMQ_USER=guest
#            - RABBITMQ_PASSWORD=guest
#        networks:
#            - dev

    #    python-example:
    #        build:
    #            context: ./backend/example/
    #        container_name: example_service
    #        ports:
    #            - "8081:8081"
    #        depends_on:
    #            - rabbitmq
    #            - postgres
    #            - redis
    #        env_file:
    #            - ./backend/example/.env
    #        volumes:
    #            - .:/app
    #        command: uvicorn src/main.py:app --host 0.0.0.0 --port 8081 --reload
    #        networks:
    #            - dev

networks:
    dev:

volumes:
    postgres_data:
    redis_data:
    elastic_data:
    avatars:

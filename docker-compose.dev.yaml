services:
    postgres:
        image: postgres:15-alpine
        container_name: postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        #      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
            - "5433:5432"
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
        network:
            - dev

    pgadmin:
        image: dpage/pgadmin4
        container_name: pga
        ports:
            - "5050:80"
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: admin
        depends_on:
            - postgres
        network:
            - dev

    rabbitmq:
        image: "rabbitmq:4-management"
        container_name: rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 30s
            timeout: 10s
            retries: 5
        network:
            - dev

#    python-example:
#        build:
#            context: ./backend/example/
#        container_name: example_service
#        ports:
#            - "8081:8081"
#        depends_on:
#            - rabbitmq
#            - postgres
#            - redis
#        env_file:
#            - ./backend/example/.env
#        volumes:
#            - .:/app
#        command: uvicorn src/main.py:app --host 0.0.0.0 --port 8081 --reload
#        network:
#            - dev

    app:
        build: .
        container_name: accounts_app
        restart: always
        depends_on:
            - postgres
            - rabbitmq
        environment:
            SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
            SPRING_DATASOURCE_USERNAME: postgres
            SPRING_DATASOURCE_PASSWORD: postgres
            SPRING_RABBITMQ_HOST: rabbitmq
            SPRING_RABBITMQ_USERNAME: guest
            SPRING_RABBITMQ_PASSWORD: guest
        ports:
            - "8081:8081"

network:
    dev:

volumes:
    postgres_data:
    redis_data:
    elastic_data: